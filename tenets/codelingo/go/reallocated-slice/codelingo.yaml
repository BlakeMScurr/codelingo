tenets:
  - name: reallocated-slice
    flows:
      codelingo/docs:
        title: Reallocated Slice
        body: Find slices that may be subject to reallocation pointer changes. Designed to catch problems like this https://github.com/juju/juju/commit/8ff9d72ebc07c0f1d2f048e5d0486335e637b313

        Reallocation explanation: https://play.golang.org/p/8VRuUibkshU
      codelingo/review:
        comment: This pointer may become invalid as the slice it comes from is reallocated.
    query: |
      import codelingo/ast/go

      go.file(depth = any): # TODO: package instead
        go.decls:
          go.gen_decl:

            # Collect struct and field name to ensure methods are on the same struct and use
            # the same field
            go.type_spec:
              go.ident:
                name as structType
              go.struct_type:
                go.field_list:
                  go.field:
                    go.names: 
                      go.ident:
                        name as sliceField # TODO(validity): verify slice type here - though really the append will do most of the job
                    go.array_type

          # Method that appends to slice field
          go.func_decl(depth = any):
            go.field_list: # TODO(validity): make this refer to method receiver fields, and exclude arguments and return values
              go.field:
                go.names:
                  go.ident:
                    name as structName
                any_of:
                  go.star_expr:
                    go.ident: # Handle pointer receiver
                      name == structType
                  go.ident: # Handle non-pointer receiver
                    name == structType
            go.ident:
              name as reallocatingFunction
            go.block_stmt:
              go.call_expr(depth = any):
                go.ident:
                  name == "append"
                go.args:
                  go.selector_expr:
                    go.ident:
                      name == structName
                    go.ident:
                      name == sliceField

          # Method that selects a pointer from a slice field
          # TODO(validity/false-negative): find updating method via the callgraph from here
          go.func_decl(depth = any):
            go.field_list: # TODO(aesthetics): Repeated method-of-struct-structure macrofact
              go.field: 
                go.names:
                  go.ident:
                    name == structName
                go.star_expr:
                  go.ident: 
                    name == structType
            go.element(depth = any):  # Refers to parent of for and assign - probably go.block_stmt

              # The address of an element of the slice is assigned to a variable
              go.assign_stmt:
                go.rhs:
                  go.unary_expr: # TODO(validity): ensure that this unary expression takes the address
                    go.index_expr:
                      go.selector_expr:
                        go.ident:
                          name == structName
                        go.ident:
                          name == sliceField

              # For loop fails to reassign to the variable variable
              go.for_stmt:
                exclude:
                  # TODO(validity/false-negative): only exclude for loops with assignments to the variable above
                  # TODO(validity/false-positive): look for assignments at any point between potential update and potential reallocation
                  go.assign_stmt: # TODO(aesthetics): repeated index-of-array macrofact
                    go.rhs:
                      go.unary_expr:
                        go.index_expr:
                          go.selector_expr:
                            go.ident:
                              name == structName
                            go.ident:
                              name == sliceField
                # Call the function that may cause slice reallocation
                @review comment
                go.call_expr(depth = any):
                  go.selector_expr:
                    go.ident:
                      name == structName
                    go.ident:
                      name == reallocatingFunction
